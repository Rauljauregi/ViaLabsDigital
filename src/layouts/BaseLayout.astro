---
import BaseHead from '@/components/BaseHead'
import Header from '@/components/Header'
import Footer from '@/components/Footer'
import ProviderTheme from '@/components/ProviderTheme'
import ProviderAnimations from '@/components/ProviderAnimations'
import { app } from '../firebase/server'
import CloseIcon from '@/components/icons/CloseIcon'
import { getAuth } from 'firebase-admin/auth'
import MailerLite from '@mailerlite/mailerlite-nodejs'
import getUserMail from '../utils/getUserMail.ts'

const mailerlite = new MailerLite({
	api_key: process.env.MAILERLITE_API || ''
})

const { title, description, image, articleDate } = Astro.props

const confirmation = Astro.url.searchParams.get('confirmation')
let confirm = ''

/* console.log("ER COOKIE:",Astro.cookies.get("session")?.value); */
const auth = getAuth(app)
let isAuthenticated = false
if (Astro.cookies.has('session')) {
	const sessionCookie = Astro.cookies.get('session')?.value
	const decodedCookie = await auth.verifySessionCookie(sessionCookie!)
	const user = await auth.getUser(decodedCookie.uid)

	if (user) {
		const email = await getUserMail(user.uid)
		await mailerlite.subscribers
			.find(email.get('email'))
			.then((response) => {
				console.log(response.data)
				if(response.data.data.status === 'unconfirmed'){
					confirm = 'not confirmed'
				}
			})
			.catch((error) => {
				if (error.response) console.log(error.response.data)
			})
	}
	if (decodedCookie) {
		isAuthenticated = true
	}
}



if (confirmation === 'needed') {
	confirm = 'not confirmed'
}

if (confirmation === 'success') {
	Astro.cookies.set('confirmed', 'true')
	confirm = 'confirmed'
}
---

<html lang='es' class='scroll-smooth'>
	<head>
		<BaseHead title={title} description={description} ogImage={image} articleDate={articleDate} />
		<ProviderTheme />
		<ProviderAnimations />
	</head>

	<body class='relative bg-white text-stone-950 dark:bg-[#0a0910] dark:text-white'>
		<main
			class='mx-auto max-w-xs sm:max-w-2xl sm:px-8 lg:px-0 antialiased md:max-w-6xl grid gap-12'
		>
			<Header isAuthenticated={isAuthenticated} />
			{
				confirm === 'not confirmed' && (
					<div
						class='w-full bg-yellow-300 dark:bg-yellow-600 text-center flex justify-center items-center rounded-lg py-2 px-2'
						id='not-confirmed'
					>
						<p class='flex-grow text-sm'>Gracias pero todavía no hemos terminado. Hemos enviado un correo electrónico de confirmación. Por favor, revisa tu bandeja de entrada y haz clic en el botón para completar tu suscripción.</p>
						<button id='close-not-confirmed-pop-up'>
							<CloseIcon />{' '}
						</button>
					</div>
				)
			}
			{
				confirm === 'confirmed' && (
					<div
						class='w-full bg-green-300 text-center flex justify-center items-center rounded-lg py-2 px-2'
						id='confirmed'
					>
						<p class='flex-grow text-sm'>¡Correo electrónico confirmado correctamente!</p>
						<button id='close-confirmed-pop-up'>
							<CloseIcon />{' '}
						</button>
					</div>
				)
			}
			<slot />
			<Footer />
		</main>
	</body><script>
		document.addEventListener('DOMContentLoaded', (event) => {
			const closeNotConfirmedPopup = document.getElementById('close-not-confirmed-pop-up')
			const notConfirmedPopup = document.getElementById('not-confirmed')

			if (closeNotConfirmedPopup && notConfirmedPopup) {
				closeNotConfirmedPopup.addEventListener('click', function () {
					notConfirmedPopup.style.display = 'none'
				})
			}

			const closeConfirmedPopup = document.getElementById('close-confirmed-pop-up')
			const confirmedPopup = document.getElementById('confirmed')

			if (closeConfirmedPopup && confirmedPopup) {
				closeConfirmedPopup.addEventListener('click', function () {
					confirmedPopup.style.display = 'none'
				})
			}
		})
	</script>
</html>
