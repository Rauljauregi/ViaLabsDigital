---
import type { CollectionEntry } from 'astro:content'
import PostCard from '@/components/PostCard'
import NewsletterPostCard from '@/components/newsletter/PostCard'
import { cn } from '@/utils'

type Props = {
	posts: CollectionEntry<'blog'>[]
	newsletters: CollectionEntry<'newsletter'>[]
	FirstBig?: boolean
}

const { newsletters, posts, FirstBig = false } = Astro.props

// Combine and sort all entries by publication date
const allEntries: CollectionEntry<'blog' | 'newsletter'>[] = [
  ...posts,
  ...newsletters,
].sort((a, b) => new Date(b.data.pubDate).getTime() - new Date(a.data.pubDate).getTime());
---
<article>
  <h2 class="text-4xl font-medium tracking-wide text-start my-4">All Posts</h2>
  <section
    class={cn(
      `grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-8 mt-3`,
      FirstBig && `md:[&>*:first-child]:col-span-2`
    )}
  >
    {allEntries.map(async (entry) => {
      const { remarkPluginFrontmatter } = await entry.render();

      return entry.collection === 'blog' ? (
        <PostCard
          data={entry.data}
          slug={entry.slug}
          readTime={remarkPluginFrontmatter.minutesRead}
        />
      ) : (
        <NewsletterPostCard
          data={entry.data}
          slug={entry.slug}
          readTime={remarkPluginFrontmatter.minutesRead}
        />
      );
    })}
  </section>
</article>
