---
const { isAuthenticated } = Astro.props
---

<div class='m-0 flex-grow w-full py-4 flex justify-end'>
	{
		!isAuthenticated ? (
			<form method='post' action='/api/users' id='sign_in'>
				<label for='email'>Email</label>
				<input type='email' id='email' name='email' />
				<button type='submit'>Subscribe to Mailing List</button>
			</form>
		) : (
			<form action='/api/auth/signout'>
				<button type='submit' id='sign_out'>
					Sign out
				</button>
			</form>
		)
	}
</div>

<script>
	import { getAuth, inMemoryPersistence, signInWithCustomToken, verifyBeforeUpdateEmail } from 'firebase/auth'
	import { app } from '../firebase/client'

	const auth = getAuth(app)
	// This will prevent the browser from storing session data
	auth.setPersistence(inMemoryPersistence)

	const form = document.getElementById('sign_in') as HTMLFormElement
	form.addEventListener('submit', async (e) => {
		e.preventDefault()
		const formData = new FormData(form)
		const email = formData.get('email')?.toString()

		if (!email) {
			return
		}

		const fetchToken = await fetch('/api/auth/getCustomToken', {
			method: 'GET',
			headers: {
				Authorization: email
			}
		})

		const customToken = await fetchToken.json()
		console.log('customToken is :', customToken.token)

		const userCredential = await signInWithCustomToken(auth, customToken.token)
		const idToken = await userCredential.user.getIdToken()
		const user = userCredential.user
      console.log(user);
      function wait(seconds:number) {
  return new Promise((resolve) => {
    setTimeout(resolve, seconds * 1000);
  });
}
		if (user) {
			// Nuovo indirizzo email

			// Aggiorna l'indirizzo email
			verifyBeforeUpdateEmail(user, email)
				.then(() => {
					console.log('Email updated successfully')
				})
				.catch((error) => {
					console.error('Error updating email: ', error)
				});
            await wait(20);
		} else {
			console.log('No user is signed in')
		}

		const response = await fetch('/api/auth/signin', {
			method: 'GET',
			headers: {
				Authorization: `Bearer ${idToken}`
			}
		})

		if (response.redirected) {
			window.location.assign(response.url)
		}
	})
</script>
