---
import ProviderAnimations from '@/components/ProviderAnimations'
import ProviderTheme from '@/components/ProviderTheme'
import MoonIcon from '@/components/icons/MoonIcon'
import Shape from '@/components/icons/Shape'
import SunIcon from '@/components/icons/SunIcon'
import BaseLayout from '@/layouts/BaseLayout'
import { getPosts } from '@/utils'

export const prerender = false
const url = new URL(Astro.url)
const locationParam = url.searchParams.get('location')
const customToken = url.searchParams.get('customToken')
const customTokenAlreadyPresent = url.searchParams.get('customTokenAlreadyPresent')
const sessionCookie = Astro.cookies.get('session')

let customTokenMessage = 'Procesando...'

if (customToken && !customTokenAlreadyPresent) {
	customTokenMessage = 'Registrando a Mindful ML...'
}

if (customTokenAlreadyPresent && !customToken) {
	customTokenMessage = 'Accediendo Mindful ML...'
}

if(!customToken && !customTokenAlreadyPresent){
	console.log("locationParam is:",locationParam)
	if(locationParam){
		return Astro.redirect(locationParam);
	}
   return Astro.redirect("/");
}

if(sessionCookie){
	console.log("locationParam is:",locationParam)
	if(locationParam){
		return Astro.redirect(locationParam);
	}
   return Astro.redirect("/");
}
---

<html lang='es' class='scroll-smooth'>
	<head>
		<ProviderTheme />
		<ProviderAnimations />
	</head>

	<body class='relative bg-white text-stone-950 dark:bg-[#0a0910] dark:text-white'>
		<header class='flex justify-between items-center h-full font-semibold flex-wrap my-4'>
			<div class='w-full flex justify-end items-center gap-2 pr-2.5'>
				<span class='theme relative'>
					<span class='sun-logo w-fit h-fit opacity-0 transition-transform duration-500'>
						<svg
							xmlns='http://www.w3.org/2000/svg'
							class='icon icon-tabler icon-tabler-sun-high h-16 w-16 md:h-10 md:w-10 lg:w-8 lg:h-8'
							width='24'
							height='24'
							viewBox='0 0 24 24'
							stroke-width='1'
							stroke='currentColor'
							fill='none'
							stroke-linecap='round'
							stroke-linejoin='round'
						>
							<path stroke='none' d='M0 0h24v24H0z' fill='none'></path>
							<path d='M14.828 14.828a4 4 0 1 0 -5.656 -5.656a4 4 0 0 0 5.656 5.656z'></path>
							<path d='M6.343 17.657l-1.414 1.414'></path>
							<path d='M6.343 6.343l-1.414 -1.414'></path>
							<path d='M17.657 6.343l1.414 -1.414'></path>
							<path d='M17.657 17.657l1.414 1.414'></path>
							<path d='M4 12h-2'></path>
							<path d='M12 4v-2'></path>
							<path d='M20 12h2'></path>
							<path d='M12 20v2'></path>
						</svg>
					</span>
					<span
						class='moon-logo w-fit h-fit absolute opacity-0 inset-0 transition-transform duration-500'
					>
						<svg
							xmlns='http://www.w3.org/2000/svg'
							class='icon icon-tabler icon-tabler-moon h-16 w-16 md:h-10 md:w-10 lg:w-8 lg:h-8'
							width='24'
							height='24'
							viewBox='0 0 24 24'
							stroke-width='1.25'
							stroke='currentColor'
							fill='none'
							stroke-linecap='round'
							stroke-linejoin='round'
						>
							<path stroke='none' d='M0 0h24v24H0z' fill='none'></path>
							<path
								d='M12 3c.132 0 .263 0 .393 0a7.5 7.5 0 0 0 7.92 12.446a9 9 0 1 1 -8.313 -12.454z'
							></path>
						</svg>
					</span>
				</span>
			</div>
		</header>

		<main class='h-[90vh] w-full flex justify-center items-center'>
			<div
				class='inline-flex items-center px-16 py-8 md:px-8 md:py-4 font-semibold leading-6 shadow rounded-md text-white bg-indigo-500 transition ease-in-out duration-150 cursor-not-allowed'
			>
				<svg
					class='animate-spin -ml-1 mr-3 h-10 w-10 text-white md:h-8 md:w-8 lg:h-6 lg:w-6'
					xmlns='http://www.w3.org/2000/svg'
					fill='none'
					viewBox='0 0 24 24'
				>
					<circle class='opacity-25' cx='12' cy='12' r='10' stroke='currentColor' stroke-width='4'
					></circle>
					<path
						class='opacity-75'
						fill='currentColor'
						d='M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z'
					></path>
				</svg>
				<p class='text-5xl md:text-2xl lg:text-base'>
					{customTokenMessage}
				</p>
			</div>
		</main>
		<script>
			import { signInWithCustomToken, getAuth, verifyBeforeUpdateEmail } from 'firebase/auth'
			import { app } from '../firebase/client'

			const url = new URL(window.location.href)
			const customToken = url.searchParams.get('customToken')
			const customTokenAlreadyPresent = url.searchParams.get('customTokenAlreadyPresent')
			const location = url.searchParams.get('location');
			console.log("register location is:", location);

			if (customToken) {
				const auth = getAuth(app)
				const userCredential = await signInWithCustomToken(auth, customToken)
				const idToken = await userCredential.user.getIdToken()

				const response = await fetch('/api/auth/signin', {
					method: 'GET',
					headers: {
						Authorization: `Bearer ${idToken}`,
						Confirmation: "needed",
						Location: `${location}`,
					}
				})

				if (response.redirected) {
					window.location.assign(response.url)
				}
			}

			if (customTokenAlreadyPresent) {
				const auth = getAuth(app)
				const userCredential = await signInWithCustomToken(auth, customTokenAlreadyPresent)
				const idToken = await userCredential.user.getIdToken()
				const response = await fetch('/api/auth/signin', {
					method: 'GET',
					headers: {
						Authorization: `Bearer ${idToken}`,
						Location: `${location}`,
					}
				})

				if (response.redirected) {
					window.location.assign(response.url)
				}
			}
		</script>
	</body>
</html>
